name: CMake Build Matrix

# Controls when the action will run. Triggers the workflow on push
on: 
  push:
    branches:
      - gha-build

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }} # будет запускаться по очереди на всех типах машин
    strategy:
      fail-fast: false
      matrix:
        config: 
        - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            artifact: "windows_msvc.7z",
            build_type: "Release",
            cc: "cl",
            cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            archiver: "7z a",
            generators: "Visual Studio 16 2019"
          }

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true


      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
      
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ github.workspace }}/vcpkg
          key: ${{ hashFiles('${{ github.event_name }}/external/response_file.txt') }}


      - name: Install dependencies on windows
        if: startsWith(matrix.config.os, 'windows') && steps.cach.outputs.cache-hit != 'true'
        run: |
          ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.bat -disableMetrics
          ${{ github.workspace }}/vcpkg/vcpkg install @external/response_file.txt
        # cmd "${{ matrix.config.environment_script }}"


      - name: Setup python and install dependencies
        uses: actions/setup-python@v2
        with:
          python-version: 2.7
          architecture: x64
      - run: |
          python -m pip install --upgrade pip
          pip install protobuf
          
      - name: Configure
        shell: bash
        run: |
          mkdir build
          echo "Checking tool chain file exists"
          ls ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          echo "Checking installed directory"
          ls ${{ github.workspace }}/vcpkg/installed
          cmake \
            -S . \
            -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -G "${{ matrix.config.generators }}" \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir
            -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" \

      - name: Build
        shell: bash
        run: cmake --build build --config ${{ matrix.config.build_type }} -j 8

