name: CMake Build Matrix

# Controls when the action will run. Triggers the workflow on push
on: 
  repository_dispatch:
    types: [manual]
  push:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: ${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.arch }}-${{ matrix.python_version }}-${{ matrix.generator }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: ["Release"]
        arch: ["x86"]
        python_version: [3.6]
        generator: ["Unix Makefiles"]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set env variables for subsequent steps (windows)
        if: startswith(matrix.os, 'windows')
        run: |
          echo "::set-env name=TRIPLET::${{matrix.arch}}-windows-static"
          echo "test"

      - name: Set env variables for subsequent steps (ubuntu)
        if: startswith(matrix.os, 'ubuntu')
        run: |
          echo "::set-env name=TRIPLET::${{matrix.arch}}-linux"

      - name: Set env variables for subsequent steps (macos)
        if: startswith(matrix.os, 'macos')
        run: |
          echo "::set-env name=TRIPLET::${{matrix.arch}}-osx"

      - name: Set env variables for subsequent steps (all)
        run: |
          echo "::set-env name=TRIPLET_FILENAME::vcpkg_${{ env.TRIPLET }}_response_file.txt"
          echo "::set-env name=RESPONSE_FILE::response_file.txt"
          echo "::set-env name=RESPONSE_FILE_FULL::external/response_file.txt"

      - name: Set env variable test
        if: matrix.arch=='x86'
        run: |
          echo "::set-env name=SOMETHING_FOO::1"

      - name: Print env variable test
        if: env.SOMETHING_FOO
        run: |
          echo  "YEAH THIS WORKED"

      - name: Print variables
        run: |
          echo  ${{ github.workspace }}
          echo  ${{ github.home}}


      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
          echo $TRIPLET
          echo $TRIPLET_FILENAME
     
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Run dumpbin
        run: |
          dumpbin
